// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import * as $0 from "./loaders/vtexProductListingPage.ts";
import * as $1 from "./loaders/vtexLegacyProductDetailsPage.ts";
import * as $2 from "./loaders/shopifyProductListingPage.ts";
import * as $3 from "./loaders/vtexProductList.ts";
import * as $4 from "./loaders/occProductDetailsPage.ts";
import * as $5 from "./loaders/vtexLegacyProductListingPage.ts";
import * as $6 from "./loaders/vtexProductDetailsPage.ts";
import * as $7 from "./loaders/vtexLegacyProductList.ts";
import * as $8 from "./loaders/shopifyProductList.ts";
import * as $9 from "./loaders/shopifyProductDetailsPage.ts";
import * as $$0 from "./routes/inspect-vscode.ts";
import * as $$1 from "./routes/404.tsx";
import * as $$2 from "./routes/_middleware.ts";
import * as $$$0 from "./islands/LiveControls.tsx";
import * as $$$$$$0 from "./sections/SEO.tsx";
import * as $$$$$$1 from "./sections/SEOPLP.tsx";
import * as $$$$$$2 from "./sections/configOCC.global.tsx";
import * as $$$$$$3 from "./sections/configShopify.global.tsx";
import * as $$$$$$4 from "./sections/configVTEX.global.tsx";
import * as $$$$$$5 from "./sections/SEOPDP.tsx";
import { configurable } from "$live/engine/adapters/fresh/manifest.ts";
import * as $live_catchall from "$live/routes/[...catchall].tsx";
import * as $live$0 from "$live/handlers/routesSelection.ts";
import * as $live$1 from "$live/handlers/router.ts";
import * as $live$2 from "$live/handlers/fresh.ts";
import * as $live$$0 from "$live/pages/LivePage.tsx";
import * as $live$$$0 from "$live/sections/Head.tsx";
import * as $live$$$$0 from "$live/matchers/MatchDate.ts";
import * as $live$$$$1 from "$live/matchers/MatchUserAgent.ts";
import * as $live$$$$2 from "$live/matchers/MatchSite.ts";
import * as $live$$$$3 from "$live/matchers/MatchMulti.ts";
import * as $live$$$$4 from "$live/matchers/MatchRandom.ts";
import * as $live$$$$5 from "$live/matchers/MatchEnvironment.ts";
import * as $live$$$$6 from "$live/matchers/MatchAlways.ts";
import * as $live$$$$$0 from "$live/flags/audience.ts";
import * as $live$$$$$1 from "$live/flags/everyone.ts";

const manifest = {
  "loaders": {
    "./loaders/vtexProductListingPage.ts": $0,
    "./loaders/vtexLegacyProductDetailsPage.ts": $1,
    "./loaders/shopifyProductListingPage.ts": $2,
    "./loaders/vtexProductList.ts": $3,
    "./loaders/occProductDetailsPage.ts": $4,
    "./loaders/vtexLegacyProductListingPage.ts": $5,
    "./loaders/vtexProductDetailsPage.ts": $6,
    "./loaders/vtexLegacyProductList.ts": $7,
    "./loaders/shopifyProductList.ts": $8,
    "./loaders/shopifyProductDetailsPage.ts": $9,
  },
  "routes": {
    "./routes/inspect-vscode.ts": $$0,
    "./routes/404.tsx": $$1,
    "./routes/_middleware.ts": $$2,
    "./routes/[...catchall].tsx": $live_catchall,
  },
  "islands": {
    "./islands/LiveControls.tsx": $$$0,
  },
  "sections": {
    "./sections/SEO.tsx": $$$$$$0,
    "./sections/SEOPLP.tsx": $$$$$$1,
    "./sections/configOCC.global.tsx": $$$$$$2,
    "./sections/configShopify.global.tsx": $$$$$$3,
    "./sections/configVTEX.global.tsx": $$$$$$4,
    "./sections/SEOPDP.tsx": $$$$$$5,
    "$live/sections/Head.tsx": $live$$$0,
  },
  "handlers": {
    "$live/handlers/routesSelection.ts": $live$0,
    "$live/handlers/router.ts": $live$1,
    "$live/handlers/fresh.ts": $live$2,
  },
  "pages": {
    "$live/pages/LivePage.tsx": $live$$0,
  },
  "matchers": {
    "$live/matchers/MatchDate.ts": $live$$$$0,
    "$live/matchers/MatchUserAgent.ts": $live$$$$1,
    "$live/matchers/MatchSite.ts": $live$$$$2,
    "$live/matchers/MatchMulti.ts": $live$$$$3,
    "$live/matchers/MatchRandom.ts": $live$$$$4,
    "$live/matchers/MatchEnvironment.ts": $live$$$$5,
    "$live/matchers/MatchAlways.ts": $live$$$$6,
  },
  "flags": {
    "$live/flags/audience.ts": $live$$$$$0,
    "$live/flags/everyone.ts": $live$$$$$1,
  },
  "config": config,
  "baseUrl": import.meta.url,
  "schemas": {
    "definitions": {
      ".": {
        "loaders": {
          "vtexProductListingPage.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "query": {
                "title": "Query",
                "type": ["string", "null"],
                "description": "overides the query term",
              },
              "count": {
                "title": "Items per page",
                "type": "number",
                "description": "number of products per page to display",
              },
            },
            "required": ["count"],
            "title": "./loaders/vtexProductListingPage.ts@Props",
            "$id": "./loaders/vtexProductListingPage.ts@Props",
          },
          "vtexProductListingPage.ts": {
            "title": "./loaders/vtexProductListingPage.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./loaders/vtexProductListingPage.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexProductListingPage.ts",
              },
            },
            "$id": "./loaders/vtexProductListingPage.ts",
          },
          "vtexLegacyProductDetailsPage.ts@5b08d6d4-6f88-4cf8-a7e9-272ee3446418":
            {
              "$id":
                "./loaders/vtexLegacyProductDetailsPage.ts@5b08d6d4-6f88-4cf8-a7e9-272ee3446418",
            },
          "vtexLegacyProductDetailsPage.ts": {
            "title": "./loaders/vtexLegacyProductDetailsPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/vtexLegacyProductDetailsPage.ts@5b08d6d4-6f88-4cf8-a7e9-272ee3446418",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexLegacyProductDetailsPage.ts",
              },
            },
            "$id": "./loaders/vtexLegacyProductDetailsPage.ts",
          },
          "shopifyProductListingPage.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "query": {
                "title": "Query",
                "type": ["string", "null"],
                "description": "overides the query term",
              },
              "count": {
                "title": "Items per page",
                "type": "number",
                "description": "number of products per page to display",
              },
            },
            "required": ["count"],
            "title": "./loaders/shopifyProductListingPage.ts@Props",
            "$id": "./loaders/shopifyProductListingPage.ts@Props",
          },
          "shopifyProductListingPage.ts": {
            "title": "./loaders/shopifyProductListingPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/shopifyProductListingPage.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/shopifyProductListingPage.ts",
              },
            },
            "$id": "./loaders/shopifyProductListingPage.ts",
          },
          "vtexProductList.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "query": {
                "title": "Query",
                "type": "string",
                "description": "query to use on search",
              },
              "count": {
                "title": "Count",
                "type": "number",
                "description": "total number of items to display",
              },
              "sort": {
                "title": "Sort",
                "anyOf": [
                  { "type": "string", "const": "" },
                  { "type": "string", "const": "price:desc" },
                  { "type": "string", "const": "price:asc" },
                  { "type": "string", "const": "orders:desc" },
                  { "type": "string", "const": "name:desc" },
                  { "type": "string", "const": "name:asc" },
                  { "type": "string", "const": "release:desc" },
                  { "type": "string", "const": "discount:desc" },
                ],
                "description": "search sort parameter",
              },
              "collection": {
                "title": "Collection",
                "type": "array",
                "items": { "type": "string" },
                "description":
                  "Collection ID or (Product Cluster id). For more info: https://developers.vtex.com/docs/api-reference/search-api#get-/api/catalog_system/pub/products/search .",
                "pattern": "\\d*",
              },
            },
            "required": ["query", "count"],
            "title": "./loaders/vtexProductList.ts@Props",
            "$id": "./loaders/vtexProductList.ts@Props",
          },
          "vtexProductList.ts": {
            "title": "./loaders/vtexProductList.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./loaders/vtexProductList.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexProductList.ts",
              },
            },
            "$id": "./loaders/vtexProductList.ts",
          },
          "occProductDetailsPage.ts@57a824dd-965e-495e-abcb-1edaf3ab6ee3": {
            "$id":
              "./loaders/occProductDetailsPage.ts@57a824dd-965e-495e-abcb-1edaf3ab6ee3",
          },
          "occProductDetailsPage.ts": {
            "title": "./loaders/occProductDetailsPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/occProductDetailsPage.ts@57a824dd-965e-495e-abcb-1edaf3ab6ee3",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/occProductDetailsPage.ts",
              },
            },
            "$id": "./loaders/occProductDetailsPage.ts",
          },
          "vtexLegacyProductListingPage.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "term": {
                "title": "Term",
                "type": ["string", "null"],
                "description": "overides the query term",
              },
              "count": {
                "title": "Items per page",
                "type": "number",
                "description": "number of products per page to display",
              },
              "ft": {
                "title": "Ft",
                "type": ["string", "null"],
                "description": "FullText term",
              },
              "fq": { "title": "Fq", "type": ["string", "null"] },
              "map": {
                "title": "Map",
                "type": ["string", "null"],
                "description": "map param",
              },
            },
            "required": ["count"],
            "title": "./loaders/vtexLegacyProductListingPage.ts@Props",
            "$id": "./loaders/vtexLegacyProductListingPage.ts@Props",
          },
          "vtexLegacyProductListingPage.ts": {
            "title": "./loaders/vtexLegacyProductListingPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/vtexLegacyProductListingPage.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexLegacyProductListingPage.ts",
              },
            },
            "$id": "./loaders/vtexLegacyProductListingPage.ts",
          },
          "vtexProductDetailsPage.ts": {
            "title": "./loaders/vtexProductDetailsPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/vtexLegacyProductListingPage.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexProductDetailsPage.ts",
              },
            },
            "$id": "./loaders/vtexProductDetailsPage.ts",
          },
          "vtexLegacyProductList.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "query": {
                "title": "Query",
                "type": "string",
                "description": "query to use on search",
              },
              "count": {
                "title": "Count",
                "type": "number",
                "description": "total number of items to display",
              },
              "sort": {
                "title": "Sort",
                "anyOf": [
                  { "type": "string", "const": "" },
                  { "type": "string", "const": "price:desc" },
                  { "type": "string", "const": "price:asc" },
                  { "type": "string", "const": "orders:desc" },
                  { "type": "string", "const": "name:desc" },
                  { "type": "string", "const": "name:asc" },
                  { "type": "string", "const": "release:desc" },
                  { "type": "string", "const": "discount:desc" },
                ],
                "description": "search sort parameter",
              },
              "collection": {
                "title": "Collection",
                "type": "array",
                "items": { "type": "string" },
                "description":
                  "Collection ID or (Product Cluster id). For more info: https://developers.vtex.com/docs/api-reference/search-api#get-/api/catalog_system/pub/products/search .",
                "pattern": "\\d*",
              },
            },
            "required": ["query", "count"],
            "title": "./loaders/vtexLegacyProductList.ts@Props",
            "$id": "./loaders/vtexLegacyProductList.ts@Props",
          },
          "vtexLegacyProductList.ts": {
            "title": "./loaders/vtexLegacyProductList.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./loaders/vtexLegacyProductList.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/vtexLegacyProductList.ts",
              },
            },
            "$id": "./loaders/vtexLegacyProductList.ts",
          },
          "shopifyProductList.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "query": {
                "title": "Query",
                "type": "string",
                "description": "search term to use on search",
              },
              "count": {
                "title": "Count",
                "type": "number",
                "description": "total number of items to display",
              },
            },
            "required": ["query", "count"],
            "title": "./loaders/shopifyProductList.ts@Props",
            "$id": "./loaders/shopifyProductList.ts@Props",
          },
          "shopifyProductList.ts": {
            "title": "./loaders/shopifyProductList.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./loaders/shopifyProductList.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/shopifyProductList.ts",
              },
            },
            "$id": "./loaders/shopifyProductList.ts",
          },
          "shopifyProductDetailsPage.ts@1e915481-c660-432e-907a-fa0a58b3cf51": {
            "$id":
              "./loaders/shopifyProductDetailsPage.ts@1e915481-c660-432e-907a-fa0a58b3cf51",
          },
          "shopifyProductDetailsPage.ts": {
            "title": "./loaders/shopifyProductDetailsPage.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./loaders/shopifyProductDetailsPage.ts@1e915481-c660-432e-907a-fa0a58b3cf51",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./loaders/shopifyProductDetailsPage.ts",
              },
            },
            "$id": "./loaders/shopifyProductDetailsPage.ts",
          },
        },
        "islands": {
          "LiveControls.tsx@1f51c250-198d-47d0-844d-c2deca070c97": {
            "$id":
              "./islands/LiveControls.tsx@1f51c250-198d-47d0-844d-c2deca070c97",
          },
          "LiveControls.tsx": {
            "title": "./islands/LiveControls.tsx",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./islands/LiveControls.tsx@1f51c250-198d-47d0-844d-c2deca070c97",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./islands/LiveControls.tsx",
              },
            },
            "$id": "./islands/LiveControls.tsx",
          },
        },
        "components": {
          "seo": {
            "SEOBase.tsx@Props": {
              "type": "object",
              "allOf": [],
              "properties": {
                "title": { "title": "Title", "type": ["string", "null"] },
                "description": {
                  "title": "Description",
                  "type": ["string", "null"],
                },
                "url": { "title": "Url", "type": ["string", "null"] },
                "imageUrl": {
                  "title": "Image Url",
                  "type": ["string", "null"],
                },
                "themeColor": {
                  "title": "Theme Color",
                  "type": ["string", "null"],
                },
              },
              "required": [],
              "title": "./components/seo/SEOBase.tsx@Props",
              "$id": "./components/seo/SEOBase.tsx@Props",
            },
            "SEOPLP.tsx@Props": {
              "type": "object",
              "allOf": [],
              "properties": {
                "page": { "title": "Page" },
                "title": { "title": "Title", "type": ["string", "null"] },
                "description": {
                  "title": "Description",
                  "type": ["string", "null"],
                },
                "url": { "title": "Url", "type": ["string", "null"] },
                "imageUrl": {
                  "title": "Image Url",
                  "type": ["string", "null"],
                },
                "themeColor": {
                  "title": "Theme Color",
                  "type": ["string", "null"],
                },
              },
              "required": ["page"],
              "title": "./components/seo/SEOPLP.tsx@Props",
              "$id": "./components/seo/SEOPLP.tsx@Props",
            },
            "SEOPDP.tsx@Props": {
              "type": "object",
              "allOf": [],
              "properties": {
                "page": { "title": "Page" },
                "titleTemplate": {
                  "title": "Title template",
                  "type": "string",
                  "description":
                    "add a %s whenever you want it to be replaced with the product name",
                  "default": "%s | Fashion Store",
                },
                "description": {
                  "title": "Meta tag description",
                  "type": ["string", "null"],
                  "description":
                    "If not set, the product description will be used instead",
                },
                "themeColor": {
                  "title": "Theme Color",
                  "type": ["string", "null"],
                },
              },
              "required": ["page", "titleTemplate"],
              "title": "./components/seo/SEOPDP.tsx@Props",
              "$id": "./components/seo/SEOPDP.tsx@Props",
            },
          },
        },
        "sections": {
          "SEO.tsx": {
            "title": "./sections/SEO.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./components/seo/SEOBase.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/SEO.tsx",
              },
            },
            "$id": "./sections/SEO.tsx",
          },
          "SEOPLP.tsx": {
            "title": "./sections/SEOPLP.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./components/seo/SEOPLP.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/SEOPLP.tsx",
              },
            },
            "$id": "./sections/SEOPLP.tsx",
          },
          "configOCC.global.tsx": {
            "title": "./sections/configOCC.global.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./commerce/occ/client.ts@ConfigOCC",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/configOCC.global.tsx",
              },
            },
            "$id": "./sections/configOCC.global.tsx",
          },
          "configShopify.global.tsx": {
            "title": "./sections/configShopify.global.tsx",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/./commerce/shopify/client.ts@ConfigShopify",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/configShopify.global.tsx",
              },
            },
            "$id": "./sections/configShopify.global.tsx",
          },
          "configVTEX.global.tsx": {
            "title": "./sections/configVTEX.global.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./commerce/vtex/client.ts@ConfigVTEX",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/configVTEX.global.tsx",
              },
            },
            "$id": "./sections/configVTEX.global.tsx",
          },
          "SEOPDP.tsx": {
            "title": "./sections/SEOPDP.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/./components/seo/SEOPDP.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "./sections/SEOPDP.tsx",
              },
            },
            "$id": "./sections/SEOPDP.tsx",
          },
        },
        "commerce": {
          "occ": {
            "client.ts@ConfigOCC": {
              "type": "object",
              "allOf": [],
              "properties": {
                "baseUrl": { "title": "Base Url", "type": "string" },
                "nrpp": { "title": "Nrpp", "type": ["string", "null"] },
              },
              "required": ["baseUrl"],
              "title": "./commerce/occ/client.ts@ConfigOCC",
              "$id": "./commerce/occ/client.ts@ConfigOCC",
            },
          },
          "shopify": {
            "client.ts@ConfigShopify": {
              "type": "object",
              "allOf": [],
              "properties": {
                "storeName": {
                  "title": "Store Name",
                  "type": "string",
                  "description": "Shopify store name.",
                },
                "storefrontAccessToken": {
                  "title": "Storefront Access Token",
                  "type": "string",
                  "description": "Shopify storefront access token.",
                },
              },
              "required": ["storeName", "storefrontAccessToken"],
              "title": "./commerce/shopify/client.ts@ConfigShopify",
              "$id": "./commerce/shopify/client.ts@ConfigShopify",
            },
          },
          "vtex": {
            "client.ts@ConfigVTEX": {
              "type": "object",
              "allOf": [],
              "properties": {
                "account": {
                  "title": "Account",
                  "type": "string",
                  "description":
                    "VTEX Account name. For more info, read here: https://help.vtex.com/en/tutorial/o-que-e-account-name--i0mIGLcg3QyEy8OCicEoC.",
                },
                "defaultLocale": {
                  "title": "Default Locale",
                  "type": "string",
                  "description":
                    "Locale used for VTEX Intelligent Search client.",
                },
                "defaultPriceCurrency": {
                  "title": "Default Price Currency",
                  "type": "string",
                  "description": "Default price currency.",
                  "default": "USD",
                },
                "defaultSalesChannel": {
                  "title": "Default Sales Channel",
                  "type": "string",
                  "description":
                    "VTEX sales channel. This will be the default sales channel your site. For more info, read here: https://help.vtex.com/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV",
                },
                "defaultRegionId": {
                  "title": "Default Region Id",
                  "type": ["string", "null"],
                },
                "defaultHideUnnavailableItems": {
                  "title": "Default Hide Unnavailable Items",
                  "type": ["boolean", "null"],
                },
              },
              "required": [
                "account",
                "defaultLocale",
                "defaultPriceCurrency",
                "defaultSalesChannel",
              ],
              "title": "./commerce/vtex/client.ts@ConfigVTEX",
              "$id": "./commerce/vtex/client.ts@ConfigVTEX",
            },
          },
        },
      },
      "$live": {
        "routes": {
          "[...catchall].tsx@Entrypoint": {
            "type": "object",
            "allOf": [],
            "properties": {
              "handler": { "title": "Handler", "$ref": "#/root/handlers" },
            },
            "required": ["handler"],
            "title": "$live/routes/[...catchall].tsx@Entrypoint",
            "$id": "$live/routes/[...catchall].tsx@Entrypoint",
          },
        },
        "handlers": {
          "routesSelection.ts@SelectionConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "flags": {
                "title": "Flags",
                "type": "array",
                "items": { "$ref": "#/root/flags" },
              },
            },
            "required": ["flags"],
            "title": "$live/handlers/routesSelection.ts@SelectionConfig",
            "$id": "$live/handlers/routesSelection.ts@SelectionConfig",
          },
          "routesSelection.ts": {
            "title": "$live/handlers/routesSelection.ts",
            "type": "object",
            "allOf": [{
              "$ref":
                "#/definitions/$live/handlers/routesSelection.ts@SelectionConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/handlers/routesSelection.ts",
              },
            },
            "$id": "$live/handlers/routesSelection.ts",
          },
          "router.ts@RouterConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "base": { "title": "Base", "type": ["string", "null"] },
              "routes": {
                "title": "Routes",
                "$ref": "#/definitions/$live/record<string, Resolvable>",
              },
            },
            "required": ["routes"],
            "title": "$live/handlers/router.ts@RouterConfig",
            "$id": "$live/handlers/router.ts@RouterConfig",
          },
          "router.ts": {
            "title": "$live/handlers/router.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/handlers/router.ts@RouterConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/handlers/router.ts",
              },
            },
            "$id": "$live/handlers/router.ts",
          },
          "fresh.ts@FreshConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "page": { "title": "Page", "$ref": "#/root/pages" },
            },
            "required": ["page"],
            "title": "$live/handlers/fresh.ts@FreshConfig",
            "$id": "$live/handlers/fresh.ts@FreshConfig",
          },
          "fresh.ts": {
            "title": "$live/handlers/fresh.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/handlers/fresh.ts@FreshConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/handlers/fresh.ts",
              },
            },
            "$id": "$live/handlers/fresh.ts",
          },
        },
        "record<string, Resolvable>": {
          "title": "Unknown record",
          "type": "object",
          "additionalProperties": { "$ref": "#/root/handlers" },
          "$id": "$live/record<string, Resolvable>",
        },
        "pages": {
          "LivePage.tsx@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "sections": {
                "title": "Sections",
                "type": "array",
                "items": { "$ref": "#/root/sections" },
              },
            },
            "required": ["sections"],
            "title": "$live/pages/LivePage.tsx@Props",
            "$id": "$live/pages/LivePage.tsx@Props",
          },
          "LivePage.tsx": {
            "title": "$live/pages/LivePage.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/pages/LivePage.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/pages/LivePage.tsx",
              },
            },
            "$id": "$live/pages/LivePage.tsx",
          },
        },
        "sections": {
          "Head.tsx@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "title": { "title": "Title", "type": ["string", "null"] },
              "description": {
                "title": "Description",
                "type": ["string", "null"],
              },
              "url": { "title": "Url", "type": ["string", "null"] },
              "imageUrl": { "title": "Image Url", "type": ["string", "null"] },
              "faviconUrl": {
                "title": "Favicon Url",
                "type": ["string", "null"],
              },
              "styleUrls": {
                "title": "Style Urls",
                "type": "array",
                "items": { "type": "string" },
              },
              "inlineStyles": {
                "title": "Inline Styles",
                "type": "array",
                "items": { "type": "string" },
              },
              "scriptUrls": {
                "title": "Script Urls",
                "type": "array",
                "items": { "type": "string" },
              },
              "inlineScripts": {
                "title": "Inline Scripts",
                "type": "array",
                "items": { "type": "string" },
              },
              "themeColor": {
                "title": "Theme Color",
                "type": ["string", "null"],
              },
            },
            "required": [],
            "title": "$live/sections/Head.tsx@Props",
            "$id": "$live/sections/Head.tsx@Props",
          },
          "Head.tsx": {
            "title": "$live/sections/Head.tsx",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/sections/Head.tsx@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/sections/Head.tsx",
              },
            },
            "$id": "$live/sections/Head.tsx",
          },
        },
        "matchers": {
          "MatchDate.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "start": {
                "title": "Start",
                "type": ["string", "null"],
                "format": "date-time",
              },
              "end": {
                "title": "End",
                "type": ["string", "null"],
                "format": "date-time",
              },
            },
            "required": [],
            "title": "$live/matchers/MatchDate.ts@Props",
            "$id": "$live/matchers/MatchDate.ts@Props",
          },
          "MatchDate.ts": {
            "title": "$live/matchers/MatchDate.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchDate.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchDate.ts",
              },
            },
            "$id": "$live/matchers/MatchDate.ts",
          },
          "MatchUserAgent.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "includes": { "title": "Includes", "type": ["string", "null"] },
              "match": { "title": "Match", "type": ["string", "null"] },
            },
            "required": [],
            "title": "$live/matchers/MatchUserAgent.ts@Props",
            "$id": "$live/matchers/MatchUserAgent.ts@Props",
          },
          "MatchUserAgent.ts": {
            "title": "$live/matchers/MatchUserAgent.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchUserAgent.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchUserAgent.ts",
              },
            },
            "$id": "$live/matchers/MatchUserAgent.ts",
          },
          "MatchSite.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "siteId": { "title": "Site Id", "type": "number" },
            },
            "required": ["siteId"],
            "title": "$live/matchers/MatchSite.ts@Props",
            "$id": "$live/matchers/MatchSite.ts@Props",
          },
          "MatchSite.ts": {
            "title": "$live/matchers/MatchSite.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchSite.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchSite.ts",
              },
            },
            "$id": "$live/matchers/MatchSite.ts",
          },
          "MatchMulti.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "op": {
                "title": "Op",
                "anyOf": [{ "type": "string", "const": "or" }, {
                  "type": "string",
                  "const": "and",
                }],
              },
              "matchers": {
                "title": "Matchers",
                "type": "array",
                "items": { "$ref": "#/root/matchers" },
              },
            },
            "required": ["op", "matchers"],
            "title": "$live/matchers/MatchMulti.ts@Props",
            "$id": "$live/matchers/MatchMulti.ts@Props",
          },
          "MatchMulti.ts": {
            "title": "$live/matchers/MatchMulti.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchMulti.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchMulti.ts",
              },
            },
            "$id": "$live/matchers/MatchMulti.ts",
          },
          "MatchRandom.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "traffic": { "title": "Traffic", "type": "number" },
            },
            "required": ["traffic"],
            "title": "$live/matchers/MatchRandom.ts@Props",
            "$id": "$live/matchers/MatchRandom.ts@Props",
          },
          "MatchRandom.ts": {
            "title": "$live/matchers/MatchRandom.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchRandom.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchRandom.ts",
              },
            },
            "$id": "$live/matchers/MatchRandom.ts",
          },
          "MatchEnvironment.ts@Props": {
            "type": "object",
            "allOf": [],
            "properties": {
              "environment": {
                "title": "Environment",
                "anyOf": [{ "type": "string", "const": "production" }, {
                  "type": "string",
                  "const": "development",
                }],
              },
            },
            "required": ["environment"],
            "title": "$live/matchers/MatchEnvironment.ts@Props",
            "$id": "$live/matchers/MatchEnvironment.ts@Props",
          },
          "MatchEnvironment.ts": {
            "title": "$live/matchers/MatchEnvironment.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/matchers/MatchEnvironment.ts@Props",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchEnvironment.ts",
              },
            },
            "$id": "$live/matchers/MatchEnvironment.ts",
          },
          "MatchAlways.ts": {
            "title": "$live/matchers/MatchAlways.ts",
            "type": "object",
            "allOf": [],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/matchers/MatchAlways.ts",
              },
            },
            "$id": "$live/matchers/MatchAlways.ts",
          },
        },
        "record<string, string>": {
          "title": "Unknown record",
          "type": "object",
          "additionalProperties": { "type": "string" },
          "$id": "$live/record<string, string>",
        },
        "flags": {
          "audience.ts@Audience": {
            "type": "object",
            "allOf": [],
            "properties": {
              "matcher": { "title": "Matcher", "$ref": "#/root/matchers" },
              "name": { "title": "Name", "type": "string" },
              "routes": {
                "title": "Routes",
                "$ref": "#/definitions/$live/record<string, Resolvable>",
              },
              "overrides": {
                "title": "Overrides",
                "$ref": "#/definitions/$live/record<string, string>",
              },
            },
            "required": ["matcher", "name", "routes"],
            "title": "$live/flags/audience.ts@Audience",
            "$id": "$live/flags/audience.ts@Audience",
          },
          "audience.ts": {
            "title": "$live/flags/audience.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/flags/audience.ts@Audience",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/flags/audience.ts",
              },
            },
            "$id": "$live/flags/audience.ts",
          },
          "everyone.ts@EveryoneConfig": {
            "type": "object",
            "allOf": [],
            "properties": {
              "routes": {
                "title": "Routes",
                "$ref": "#/definitions/$live/record<string, Resolvable>",
              },
              "overrides": {
                "title": "Overrides",
                "$ref": "#/definitions/$live/record<string, string>",
              },
            },
            "required": [],
            "title": "$live/flags/everyone.ts@EveryoneConfig",
            "$id": "$live/flags/everyone.ts@EveryoneConfig",
          },
          "everyone.ts": {
            "title": "$live/flags/everyone.ts",
            "type": "object",
            "allOf": [{
              "$ref": "#/definitions/$live/flags/everyone.ts@EveryoneConfig",
            }],
            "required": ["__resolveType"],
            "properties": {
              "__resolveType": {
                "type": "string",
                "default": "$live/flags/everyone.ts",
              },
            },
            "$id": "$live/flags/everyone.ts",
          },
        },
      },
    },
    "root": {
      "loaders": {
        "title": "loaders",
        "anyOf": [
          { "$ref": "#/definitions/./loaders/vtexProductListingPage.ts" },
          { "$ref": "#/definitions/./loaders/vtexLegacyProductDetailsPage.ts" },
          { "$ref": "#/definitions/./loaders/shopifyProductListingPage.ts" },
          { "$ref": "#/definitions/./loaders/vtexProductList.ts" },
          { "$ref": "#/definitions/./loaders/occProductDetailsPage.ts" },
          { "$ref": "#/definitions/./loaders/vtexLegacyProductListingPage.ts" },
          { "$ref": "#/definitions/./loaders/vtexProductDetailsPage.ts" },
          { "$ref": "#/definitions/./loaders/vtexLegacyProductList.ts" },
          { "$ref": "#/definitions/./loaders/shopifyProductList.ts" },
          { "$ref": "#/definitions/./loaders/shopifyProductDetailsPage.ts" },
        ],
      },
      "islands": {
        "title": "islands",
        "anyOf": [{ "$ref": "#/definitions/./islands/LiveControls.tsx" }],
      },
      "sections": {
        "title": "sections",
        "anyOf": [
          { "$ref": "#/definitions/./sections/SEO.tsx" },
          { "$ref": "#/definitions/./sections/SEOPLP.tsx" },
          { "$ref": "#/definitions/./sections/configOCC.global.tsx" },
          { "$ref": "#/definitions/./sections/configShopify.global.tsx" },
          { "$ref": "#/definitions/./sections/configVTEX.global.tsx" },
          { "$ref": "#/definitions/./sections/SEOPDP.tsx" },
          { "$ref": "#/definitions/$live/sections/Head.tsx" },
        ],
      },
      "routes": {
        "title": "routes",
        "anyOf": [{
          "$ref": "#/definitions/$live/routes/[...catchall].tsx@Entrypoint",
        }],
      },
      "handlers": {
        "title": "handlers",
        "anyOf": [
          { "$ref": "#/definitions/$live/handlers/routesSelection.ts" },
          { "$ref": "#/definitions/$live/handlers/router.ts" },
          { "$ref": "#/definitions/$live/handlers/fresh.ts" },
        ],
      },
      "pages": {
        "title": "pages",
        "anyOf": [{ "$ref": "#/definitions/$live/pages/LivePage.tsx" }],
      },
      "matchers": {
        "title": "matchers",
        "anyOf": [
          { "$ref": "#/definitions/$live/matchers/MatchDate.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchUserAgent.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchSite.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchMulti.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchRandom.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchEnvironment.ts" },
          { "$ref": "#/definitions/$live/matchers/MatchAlways.ts" },
        ],
      },
      "flags": {
        "title": "flags",
        "anyOf": [{ "$ref": "#/definitions/$live/flags/audience.ts" }, {
          "$ref": "#/definitions/$live/flags/everyone.ts",
        }],
      },
      "state": {
        "type": "object",
        "required": ["./routes/[...catchall].tsx"],
        "properties": {
          "./routes/[...catchall].tsx": {
            "$ref": "#/definitions/$live/routes/[...catchall].tsx@Entrypoint",
          },
        },
        "additionalProperties": {
          "anyOf": [
            { "$ref": "#/root/loaders" },
            { "$ref": "#/root/islands" },
            { "$ref": "#/root/sections" },
            { "$ref": "#/root/routes" },
            { "$ref": "#/root/handlers" },
            { "$ref": "#/root/pages" },
            { "$ref": "#/root/matchers" },
            { "$ref": "#/root/flags" },
          ],
        },
      },
    },
  },
};

export default configurable(manifest);
